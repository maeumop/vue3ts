import { responseDefault } from '.';

export const getFtpMsg = {
  FTP_LIST_GET_SUCCESS: 'FTP_LIST_GET_SUCCESS',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  ...responseDefault,
} as const;

export const getFtpCheckMsg = {
  UTM_VALUES_CHECK_SUCCESS: 'UTM_VALUES_CHECK_SUCCESS',
  ...responseDefault,
} as const;

export const postFtpNameMsg = {
  FTP_NEW_FOLDER_SUCCESS: 'FTP_NEW_FOLDER_SUCCESS',
  FTP_DIRECTORY_ERROR: 'FTP_DIRECTORY_ERROR',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  FTP_NAME_ALREADY_EXIST: 'FTP_NAME_ALREADY_EXIST',
  FTP_NEW_FOLDER_FIAL: 'FTP_NEW_FOLDER_FIAL',
  ...responseDefault,
} as const;

export const putFtpNameMsg = {
  FTP_NAME_CHANGE_SUCCESS: 'FTP_NAME_CHANGE_SUCCESS',
  FTP_DIRECTORY_ERROR: 'FTP_DIRECTORY_ERROR',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  FTP_NAME_ALREADY_EXIST: 'FTP_NAME_ALREADY_EXIST',
  FTP_RENAME_FIAL: 'FTP_RENAME_FIAL',
  ...responseDefault,
} as const;

export const postFtpUploadMsg = {
  FTP_UPLOAD_SUCCESS: 'FTP_UPLOAD_SUCCESS',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  INVALID_FTP_FILE_NAME: 'INVALID_FTP_FILE_NAME',
  FTP_DIRECTORY_ERROR: 'FTP_DIRECTORY_ERROR',
  FTP_FILE_TYPE_CHECK: 'FTP_FILE_TYPE_CHECK',
  FTP_NAME_ALREADY_EXIST: 'FTP_NAME_ALREADY_EXIST',
  SPEEDY_CDN_UPLOAD_API_FAIL: 'SPEEDY_CDN_UPLOAD_API_FAIL',
} as const;

export const getFtpReloadMsg = {
  FTP_DIRECTORY_LIST_RELOAD_SUCCESS: 'FTP_DIRECTORY_LIST_RELOAD_SUCCESS',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  FTP_PURGE_FIAL: 'FTP_PURGE_FIAL',
  ...responseDefault,
} as const;

export const deleteFtpMsg = {
  FTP_DELETE_SUCCESS: 'FTP_DELETE_SUCCESS',
  FTP_DIRECTORY_ERROR: 'FTP_DIRECTORY_ERROR',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  FTP_DELETE_FIAL: 'FTP_DELETE_FIAL',
  ...responseDefault,
} as const;


export const getS3uploadUrlMsg = {
  S3_URL_GET_SUCCESS: 'S3_URL_GET_SUCCESS',
  INVALID_FTP_FILE_NAME: 'INVALID_FTP_FILE_NAME',
  INVALID_FTP_FILE_EXTENSION: 'INVALID_FTP_FILE_EXTENSION',
  FTP_RESOURCE_NOT_FOUND: 'FTP_RESOURCE_NOT_FOUND',
  FTP_DIRECTORY_ERROR: 'FTP_DIRECTORY_ERROR',
  FTP_NAME_ALREADY_EXIST: 'FTP_NAME_ALREADY_EXIST',
  ...responseDefault,
} as const;


export const postFtpSendMsg = {
  AccessDenied: 'AccessDenied',
  ...responseDefault,
} as const;