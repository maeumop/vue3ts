@import '../common.scss';

.list-table {
  @include scrollbar;
  overflow: auto;
  position: relative;

  &.gray-bg {
    background-color: $gray-50;
  }

  &.scroll-hold {
    overflow: hidden !important;
  }

  &.border {
    border: 1px solid $gray-300;
    border-top: 0;
  }

  table {
    top: 0;
    left: 0;
    min-width: 100%;
    // box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.15);
    border-spacing: 0;

    &.head-hold {
      position: absolute;
    }

    &.no-box-shadow {
      box-shadow: none !important;
    }

    .columns {
      cursor: pointer;
      display: flex;
      align-items: center;

      &.center {
        justify-content: center;
      }
      &.left {
        justify-content: space-between;
      }
      &.right {
        justify-content: flex-end;
      }
    }

    .sorting {
      transition: all 0.2s;
      transform-origin: center;
      color: $gray-400;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 19px;

      &:hover {
        color: $gray-800;
      }

      &.desc {
        transform: rotate(360deg);
      }

      &.asc {
        transform: rotate(180deg);
      }
    }

    .sort-cell-text {
      margin-right: 5px;
      position: relative;
    }

    thead {
      top: 0;
      position: sticky;
      z-index: 1;

      th {
        height: 50px;

        font-size: 14px;
        font-weight: 500;
        color: $gray-800;
        padding: 10px 16px;
        text-align: left;
        background-color: $white;

        border-width: 1px 0 1px 0;
        border-style: solid;
        border-color: $gray-300;
      }

      &.is-scroll::after {
        position: absolute;
        z-index: 20;
        left: 0;
        height: 6px;
        width: 100%;
        background: -webkit-gradient(
          linear,
          left top,
          left bottom,
          from(rgba(0, 0, 0, 0.1)),
          to(rgba(0, 0, 0, 0))
        );
        background: linear-gradient(
          to bottom,
          rgba(0, 0, 0, 0.1),
          rgba(0, 0, 0, 0)
        );
        content: '';
      }
    }

    tbody {
      tr {
        &:hover {
          background-color: $gray-100;
        }

        .no-data {
          border-bottom: 0 !important;
          text-align: center;
          color: $gray-800;
          font-size: 14px;
          font-weight: 400;

          .icon {
            font-size: 16px;
            color: $gray-400;
          }
        }

        td {
          height: 50px;

          padding: 10px 16px;
          border-style: solid;
          border-color: $gray-300;
          border-width: 0 0 1px 0;
          font-size: 14px;
          font-weight: 400;
          word-break: break-all;
          a {
            font-size: 14px;
            color: #424242;
          }
        }
      }
    }
  }

  thead,
  tbody,
  tfoot {
    .center {
      text-align: center;
    }

    .right {
      text-align: right;
    }
  }

  table {
    td,
    th {
      &:has(> .checkbox-wrap) {
        text-align: center;
      }
    }
  }

  .checkbox-wrap {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;

    input {
      position: absolute;
      clip: rect(0, 0, 0, 0);
    }

    input + svg {
      color: $gray-400;
      font-size: 24px;
      width: 24px;
    }

    input:checked + svg {
      color: $primary;
      font-size: 24px;
      width: 24px;
    }

    input:disabled + svg {
      color: $gray-300;
      font-size: 24px;
      width: 24px;
    }
  }
}

.spinner-wrap {
  margin: 20px 0;
  text-align: center;
  width: 100%;

  .spinner {
    display: inline-block;
    margin: 0 auto;
    animation: spin 1s ease-out infinite;
    -webkit-animation: spin 1s ease-out infinite;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  to {
    -webkit-transform: rotate(360deg);
  }
}
